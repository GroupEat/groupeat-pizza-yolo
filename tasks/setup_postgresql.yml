---
- name: Create groupeat PostgreSQL database
  postgresql_db: name=groupeat state=present
  sudo: yes
  sudo_user: postgres

- name: Enable the PostGIS extension
  postgresql_ext: name=postgis db=groupeat
  sudo: yes
  sudo_user: postgres

- name: Create groupeat user and grant him access to the db
  postgresql_user: db=groupeat name=groupeat password={{ staging_pgsql_password if app_env == 'staging' else (production_pgsql_password if app_env == 'production' else 'groupeat') }} state=present role_attr_flags=SUPERUSER,INHERIT,NOCREATEDB,NOCREATEROLE,NOREPLICATION
  notify: Restart postgresql
  sudo: yes
  sudo_user: postgres

- name: Create analytics user and grant him restricted access to the db
  postgresql_user: db=groupeat name=analytics password={{ staging_pgsql_password if app_env == 'staging' else (production_pgsql_password if app_env == 'production' else 'groupeat') }} state=present role_attr_flags=NOSUPERUSER,NOINHERIT,NOCREATEDB,NOCREATEROLE,NOREPLICATION
  notify: Restart postgresql
  sudo: yes
  sudo_user: postgres

- name: Grant read only permission to analytics user
  postgresql_privs: database=groupeat privs=SELECT objs=ALL_IN_SCHEMA schema=public roles=analytics grant_option=yes state=present
  notify: Restart postgresql
  sudo: yes
  sudo_user: postgres

- name: Upload PostgreSQL config
  template: src=templates/postgresql.conf.j2 dest=/etc/postgresql/9.4/main/postgresql.conf
  notify: Restart postgresql

- name: Upload PostgreSQL auth config
  template: src=templates/pg_hba.conf.j2 dest=/etc/postgresql/9.4/main/pg_hba.conf
  notify: Restart postgresql
